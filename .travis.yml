language: php
php:
  - 7.1
  - 7.2
  - 7.3

matrix:
  include:
  - php: 7.3
    env: "DB=sqlite SERVER_BRANCH=stable17"
  - php: 7.3
    env: "DB=sqlite SERVER_BRANCH=v17.0.0beta4"
  - php: 7.3
    env: "DB=pgsql"
  - php: 7.2
    env: "DB=mysql"
  - php: 7.2
    env: "DB=pgsql"

env:
  global:
  - SERVER_BRANCH=master
  - DB=sqlite

addons:
  mariadb: '10.3'
  postgresql: '11.5'

branches:
  only:
  - master
  - "/^stable\\d+(\\.\\d+)?$/"

cache:
  directories:
  - "$HOME/.composer/cache/files"

before_install:
  - php --version
  - mysql --version
  - postgres --version

  # Check out the Nextcloud server via git
  - cd ..
  - git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b $SERVER_BRANCH

  # Move the app under test into Nextcloud's `apps` directory
  - mv twofactor_admin server/apps/

install:
  # Install the db
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e 'create database nc_autotest;'; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e "CREATE USER 'nc_autotest'@'localhost' IDENTIFIED BY '';"; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e "GRANT ALL ON nc_autotest.* TO 'nc_autotest'@'localhost';"; fi
  - if [[ "$DB" == "pgsql" ]]; then psql -c "CREATE DATABASE nc_autotest;" -U postgres; fi
  - if [[ "$DB" == "pgsql" ]]; then psql -c "CREATE USER nc_autotest WITH PASSWORD '';" -U postgres; fi
  - if [[ "$DB" == "pgsql" ]]; then psql -c "GRANT ALL PRIVILEGES ON DATABASE nc_autotest TO nc_autotest;" -U postgres; fifi

  # Install the server
  - php -f server/occ maintenance:install --database-name nc_autotest --database-user nc_autotest --admin-user admin --admin-pass admin --database $DB --database-pass=''

  # Enable debug mode to get more info in case a test fails
  - php -f server/occ config:system:set debug --value=true --type boolean

  # Install composer dependencies
  - pushd server/apps/twofactor_admin
  - composer install
  - popd

  # Set up app
  - php -f server/occ app:enable twofactor_admin

before_script:
  # Switch bach to the app directory
  - cd server/apps/twofactor_admin

script:
  # Lint php files
  - find . -name \*.php -not -path './vendor/*' -exec php -l "{}" \;

  # Run unit/integration tests
  - ./vendor/bin/phpunit -c tests/phpunit.xml

after_script:
  - wget https://scrutinizer-ci.com/ocular.phar
  - php ocular.phar code-coverage:upload --format=php-clover tests/clover.xml
